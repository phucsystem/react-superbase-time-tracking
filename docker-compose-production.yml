services:
  # Frontend Production
  app-prod:
    build:
      context: ./web-ui
      dockerfile: Dockerfile.prod
      args:
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - supabase-db
    networks:
      - app-network

  # PostgreSQL Database for Production
  supabase-db:
    image: postgres:15
    container_name: supabase-db-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-supabase}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_PORT: 5432
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./supabase/migrations/001_initial_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      # Note: Removed seed.sql for production - add data manually or via migrations
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Supabase GoTrue Auth API for Production
  supabase-auth:
    image: supabase/gotrue:v2.132.3
    container_name: supabase-auth-prod
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@supabase-db:5432/${POSTGRES_DB:-supabase}?sslmode=disable
      GOTRUE_SITE_URL: ${SITE_URL:-http://localhost}
      GOTRUE_URI_ALLOW_LIST: ${URI_ALLOW_LIST:-http://localhost}
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_DISABLE_SIGNUP: ${DISABLE_SIGNUP:-true}
      GOTRUE_EXTERNAL_EMAIL_DISABLED: true
      GOTRUE_SMTP_HOST: ${SMTP_HOST}
      GOTRUE_SMTP_PORT: ${SMTP_PORT:-587}
      GOTRUE_SMTP_USER: ${SMTP_USER}
      GOTRUE_SMTP_PASS: ${SMTP_PASS}
      GOTRUE_SMTP_ADMIN_EMAIL: ${ADMIN_EMAIL}
    ports:
      - "${AUTH_PORT:-54321}:9999"
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - app-network

  # PostgREST API for Production
  supabase-rest:
    image: postgrest/postgrest:v11.2.2
    container_name: supabase-rest-prod
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@supabase-db:5432/${POSTGRES_DB:-supabase}
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"
    ports:
      - "${REST_PORT:-54320}:3000"
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    networks:
      - app-network

  # Reverse Proxy for Production (optional)
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "443:443"
    restart: unless-stopped
    depends_on:
      - app-prod
      - supabase-auth
      - supabase-rest
    networks:
      - app-network
    profiles:
      - ssl

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data_prod: