services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app-prod
      - supabase-rest
    restart: unless-stopped

  # Frontend Production Build
  app-prod:
    build:
      context: ./web-ui
      dockerfile: Dockerfile.prod
      args:
        VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
        VITE_SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
    container_name: time-tracking-app
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
    ports:
      - "8888:8888"  
    depends_on:
      supabase-db:
        condition: service_healthy
    restart: unless-stopped

  # PostgreSQL Database
  supabase-db:
    image: postgres:15
    container_name: supabase-db
    environment:
      POSTGRES_DB: supabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./supabase/backup:/backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # PostgREST API
  supabase-rest:
    image: postgrest/postgrest:v11.2.2
    container_name: supabase-rest
    environment:
      PGRST_DB_URI: postgres://postgres:${POSTGRES_PASSWORD}@supabase-db:5432/supabase
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: postgres
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_USE_LEGACY_GUCS: "false"
    ports:
      - "54320:3000"
    depends_on:
      supabase-db:
        condition: service_healthy
    restart: unless-stopped

  # Supabase GoTrue Auth API
  supabase-auth:
    image: supabase/gotrue:v2.132.3
    container_name: supabase-auth
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@supabase-db:5432/supabase?sslmode=disable
      GOTRUE_SITE_URL: http://your-domain.com
      GOTRUE_URI_ALLOW_LIST: "http://your-domain.com,https://your-domain.com"
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_DISABLE_SIGNUP: "false"
      GOTRUE_EXTERNAL_EMAIL_DISABLED: "true"
      API_EXTERNAL_URL: http://your-domain.com:54321
    ports:
      - "54321:9999"
    depends_on:
      supabase-db:
        condition: service_healthy
    restart: unless-stopped

  # Supabase Studio
  supabase-studio:
    image: supabase/studio:20240326-5e5586d
    container_name: supabase-studio
    environment:
      STUDIO_PG_META_URL: http://supabase-meta:8080
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DEFAULT_ORGANIZATION_NAME: "Production"
      DEFAULT_PROJECT_NAME: "Time Tracking App"
      SUPABASE_URL: http://supabase-auth:9999
      SUPABASE_REST_URL: http://supabase-rest:3000
      SUPABASE_ANON_KEY: ${VITE_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
    ports:
      - "54323:3000"
    depends_on:
      - supabase-meta
    restart: unless-stopped

  # Supabase Meta API (for Studio)
  supabase-meta:
    image: supabase/postgres-meta:v0.75.0
    container_name: supabase-meta
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: supabase-db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: supabase
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "54324:8080"
    depends_on:
      supabase-db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data: